import numpy as np
import scipy.stats as st
import matplotlib.pyplot as plt

def Simulation(theta, inventory, S, h, b, p, N, demand):
    cost = 0
    for i in range(N):
        production = min(S,max(theta-inventory+demand[i],0))
        cost += h*max(inventory,0) + b*-min(inventory-demand[i],0) + p*production
        inventory = inventory - demand[i] + production
    return cost/N

def MVD_mu(mu,theta, inventory, S, h, b, p, N, K):
    
    D = np.zeros(K)
    for i in range(K):
        X = np.random.exponential(mu,N)
        Function = np.zeros(N)
        for j in range(N):
            X_new = np.random.exponential(scale=mu)
            Y = np.random.exponential(scale=mu)
            X_plus = X.copy()
            X_plus[j] = X_new + Y
            L_plus = Simulation(theta, inventory, S, h, b, p, N, X_plus)
            X_min = X.copy()
            X_min[j] = X_new
            L_min = Simulation(theta, inventory, S, h, b, p, N, X_min)
            Function[j] = (L_plus - L_min)/mu
        D[i] = sum(Function)
    return D

def print_all(D, name):
        confidence = st.t.interval(alpha=0.95, df=len(D) - 1, loc=np.mean(D), scale=st.sem(D))
        print(f'________{name}__________')
        print('Estimate =', np.round(np.mean(D),5))
        print('confidence interval =', np.round(confidence, 5))
        print('var =', np.round(st.sem(D)**2,7))  
        print()

        # for fun
        plt.figure()
        plt.title(name)
        plt.hist(D, bins=100)

if __name__=="__main__":
    theta = 24.718      # theta_0
    inventory = 10
    S = 20
    h = 4
    b = 8
    p = 10
    N = 20
    mu = 0.0001
    K = 1000
    print_all(MVD_mu(mu,theta, inventory, S, h, b, p, N, K), "MVD_mu")
    
